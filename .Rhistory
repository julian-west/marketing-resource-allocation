knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(tidyr)
library(dplyr)
library(forecast)
library(ggplot2)
library(stargazer)
library(fastDummies)
main_features <- c("Week",
"CategorySales",
"SALESBRAND1",
"SALESBRAND2",
"SALESBRAND3",
"PRICEBRAND1",
"PRICEBRAND2",
"PRICEBRAND3",
"display_brand1",
"display_brand2",
"display_brand3",
"FEATUREBRAND1",
"FEATUREBRAND2",
"FEATUREBRAND3")
add_features <- c("RETAILERMARGINBRAND1",
"RETAILERMARGINBRAND2",
"RETAILERMARGINBRAND3",
"WHOLESALEPRICE1",
"WHOLESALEPRICE2",
"WHOLESALEPRICE3")
data <- read_excel("./data/beer_data_chicago_Dominicks.xlsx")
store_data <- data %>% select(main_features)
stargazer(head(store_data),summary=FALSE, type='html',rownames=FALSE)
stl(ts(store_data$CategorySales,frequency = 52), s.window = 'periodic') %>%
autoplot +
theme_minimal() +
ggtitle("Total beer category sales, trend and seasonality") +
xlab("Months")
plot_variable_by_brand <- function(data, variable, title, ylabel){
#plots specified variable by brand
#select cols and reshape dataframe
df_data <- data %>%
select(Week, paste0(variable,"1"), paste0(variable,"2"), paste0(variable,"3")) %>%
gather(key="variable",value="value", -Week)
return (ggplot(df_data, aes(x=Week, y=value)) +
geom_line(aes(color=variable), size=1) +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#ff0000")) +
theme_minimal() +
ggtitle(title) +
ylab(ylabel))
}
plot_variable_by_brand(data,"SALESBRAND","Weekly Sales by Brand","Sales ($)")
plot_variable_by_brand(data,"PRICEBRAND","Weekly Prices by Brand","Prices ($)")
plot_variable_by_brand(data,"FEATUREBRAND","Weekly featured products by brand", "Percentage of SKUs")
plot_variable_by_brand(data,"display_brand","Weekly displayed products by brand","Percentage of SKUs")
set.seed(42)
SPLIT = 0.75
smp_size <- floor(nrow(store_data)*SPLIT)
train_ind <- sample(seq_len(nrow(store_data)), size = smp_size)
train <- store_data[train_ind, ]
test <- store_data[-train_ind, ]
store_data$Month <- format(seq(as.Date('1989/09/01'),by='week',length.out = nrow(store_data)),"%B")
#seasonal variable
store_data <- fastDummies::dummy_cols(store_data)
make_binary <- function(x){return(if(x>0.01) 1 else 0)}
store_data$FEATUREBRAND1_BINARY <- store_data$FEATUREBRAND1 %>% lapply(make_binary)
store_data
store_data$FEATUREBRAND1_BINARY <- ifelse(store_data$FEATUREBRAND1>0.01, 1, 0)
store_data
store_data %>% select(FEATUREBRAND1, FEATUREBRAND1_BINARY)
make_binary <- function(x){return(if(x>0.01) 1 else 0)}
store_data$FEATUREBRAND1_BINARY <- ifelse(store_data$FEATUREBRAND1>0.01, 1, 0)
store_data$FEATUREBRAND2_BINARY <- ifelse(store_data$FEATUREBRAND2>0.01, 1, 0)
store_data$FEATUREBRAND3_BINARY <- ifelse(store_data$FEATUREBRAND3>0.01, 1, 0)
store_data$FEATUREBRAND1_BINARY <- ifelse(store_data$FEATUREBRAND1>0.01, 1, 0)
store_data$FEATUREBRAND2_BINARY <- ifelse(store_data$FEATUREBRAND2>0.01, 1, 0)
store_data$FEATUREBRAND3_BINARY <- ifelse(store_data$FEATUREBRAND3>0.01, 1, 0)
colnames(store_data)
for (col in colnames(store_data)){}
for (col in colnames(store_data)){paste(col)}
for (col in colnames(store_data)){print(1)}
for (col in colnames(store_data)){print(col)}
tail(store_data)
store_data
